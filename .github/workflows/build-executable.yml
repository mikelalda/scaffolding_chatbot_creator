# Nombre del flujo de trabajo
name: Build Windows Executable and Create Release

# Se ejecuta cuando se crea y se sube una etiqueta (tag) que empieza con 'v'
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    # Se ejecutará en la última versión de Windows disponible en GitHub
    runs-on: windows-latest

    steps:
      # 1. Clona el repositorio para tener acceso al código
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura el entorno de Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Instala las dependencias del proyecto
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Construye el ejecutable usando PyInstaller
      - name: Build executable with PyInstaller
        run: |
          pyinstaller --name "ScaffoldingChatbot" --onefile --windowed --icon="assets/icon.ico" --add-data "configs;configs" main.py
      
      # 5. Crea un Release en GitHub y adjunta el ejecutable
      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          # El nombre del archivo que se adjuntará al release
          files: dist/ScaffoldingChatbot.exe
        env:
          # El token es necesario para que la acción pueda crear un release
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}